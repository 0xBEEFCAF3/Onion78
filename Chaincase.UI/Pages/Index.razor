@page "/"
@using Chaincase.UI.Services
@using Splat;

@inject UIStateService UiStateService
@inject NavigationManager NavigationManager

@inherits ReactiveComponentBase<IndexViewModel>

<ion-content class="ion-padding">
    <h1>@ViewModel.Balance</h1>
    <p>Tor running x peers Ready</p>
    <ion-progress-bar color="primary" />

    @foreach (var t in ViewModel.Transactions)
    {
        <TransactionListItem TransactionViewModel="@t" />
    }

    @if (!ViewModel.Transactions.Any())
    {
        <p>Your transactions will appear here</p>
    }

    <ion-button expand="block"
                href="backup/start"
                @onclick='() => NavigationManager.NavigateTo("backup/start")'
                @onclick:preventDefault="true">
        DON'T FORGET TO MAKE A BACKUP
    </ion-button>
    <ion-button expand="block"
                href="receive"
                @onclick='() => NavigationManager.NavigateTo("receive")'
                @onclick:preventDefault="true">
        GET RECEIVE ADDRESS
    </ion-button>

    <ion-button expand="block"
                href="send"
                @onclick='() => NavigationManager.NavigateTo("send/who")'
                @onclick:preventDefault="true">SEND</ion-button>

    <ion-button expand="block"
                href="coinjoin"
                @onclick='() => NavigationManager.NavigateTo("coinjoin")'
                @onclick:preventDefault="true">COINJOIN</ion-button>
</ion-content>

@code{
    public Index()
    {
        ViewModel = Locator.Current.GetService<IndexViewModel>();
    }

    protected override void OnInitialized()
    {
        UiStateService.Title = "Chaincase";
        base.OnInitialized();
    }

}
