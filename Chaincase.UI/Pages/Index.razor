@page "/"
@using Chaincase.UI.Services
@using Chaincase.Common
@inject IndexViewModel IndexViewModel
@inject UIStateService UiStateService
@inject StackService StackService 
@inject NavigationManager NavigationManager
@inject Global Global

@inherits ReactiveComponentBase<IndexViewModel>

<ion-content class="ion-padding">
    <h1>Balance: @ViewModel.Balance</h1>

    <Status />

    @foreach (var t in ViewModel.Transactions)
    {
        <TransactionListItem TransactionViewModel="@t"/>
    }

    @if (!ViewModel.Transactions.Any())
    {
        <p>Your transactions will appear here</p>
    }

    <IonButton expand="block"
               href="backup/start">
        DON'T FORGET TO MAKE A BACKUP
    </IonButton>
    <IonButton expand="block"
               href="receive">
        GET RECEIVE ADDRESS
    </IonButton>

    <IonButton expand="block"
               href="send/who">
        SEND
    </IonButton>

    <IonButton expand="block"
               OnClick="NavigateToCoinJoin">
        COINJOIN
    </IonButton>
</ion-content>

@code{

    protected override void OnInitialized()
    {
        ViewModel = IndexViewModel;

        if (!Global.HasWalletFile())
            NavigationManager.NavigateTo("landing");

        UiStateService.Title = "Chaincase";
        base.OnInitialized();
    }

    private void NavigateToCoinJoin()
    {
        StackService.PushStackState(async () =>
        {
            await NavigationManager.NavigateBack(null, "");
        });
        NavigationManager.NavigateTo("coinjoin");
    }

}
