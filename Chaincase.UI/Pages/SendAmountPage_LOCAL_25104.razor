@page "/send/amount"
@using Chaincase.UI.Services
@using Splat

@inject UIStateService UiStateService
@inject NavigationManager NavigationManager

@inherits ReactiveComponentBase<SendViewModel>

<ion-content class="ion-padding">

    <ion-item>
        <ion-label>Amount</ion-label>
        <IonInput @bind-Value="@ViewModel.AmountText" type="number" />
    </ion-item>
    <span>$[dollars]</span>

    @*<ion-label>Set Max</ion-label> TODO should be a button that just sets amount & coin selection*@
    <IonToggle name="grape" color="tertiary" Value="true"></IonToggle>

    <span style="text-align:center;">Send From</span>
    <ion-button @onclick="ToggleSelectCoinsModal" expand="block">x Coins Selected</ion-button>
    <span style="text-align:center;">[amount] BTC selected to fund</span>

    <span>Fee @ViewModel.FeeRate sat / vbyte</span>

    <ion-button href="/send/confirm"
                @onclick='NavigateToSendConfirmPage'
                @onclick:preventDefault="true"
                expand="block">CONFIRM</ion-button>

    <SelectCoinsModal @bind-Visible="@IsSelectCoinsModalVisible"
                      SelectCoinsViewModel="@ViewModel.SelectCoinsViewModel" />
</ion-content>

@code {

    private bool IsSelectCoinsModalVisible;
    private double amount { get; set; }

    public SendAmountPage()
    {
        ViewModel = Locator.Current.GetService<SendViewModel>();
    }

    protected override void OnInitialized()
    {
        UiStateService.Title = "SEND";
    }

    private void ToggleSelectCoinsModal() =>
        IsSelectCoinsModalVisible = !IsSelectCoinsModalVisible;

    private void NavigateToSendConfirmPage() =>
        NavigationManager.NavigateTo("/send/confirm");

}
