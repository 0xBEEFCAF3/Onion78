@inherits ReactiveComponentBase<SelectCoinsViewModel>

<IonModal @bind-Visible="@Visible">
    <ion-header>
        <ion-toolbar>
            <ion-title>Select Coins</ion-title>
            <ion-buttons slot="start">
                <IonButton @onclick="CloseModal">Back</IonButton>
            </ion-buttons>
        </ion-toolbar>
    </ion-header>
    <ion-content class="ion-padding">

        @if (!ViewModel.CoinList.Any())
        {
            <p>Your coins will appear here</p>
        }
        @*else {*@
            @*@foreach (var coin in ViewModel.CoinList)
            {
                <SelectableCoin CoinViewModel="@coin" />
            }*@
        @*}*@


    </ion-content>
</IonModal>
    
@code {

    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public EventCallback<bool> VisibleChanged { get; set; }

    [Parameter]
    public SelectCoinsViewModel SelectCoinsViewModel { get; set; }

    protected override void OnParametersSet()
    {
        ViewModel = SelectCoinsViewModel;
        var coins = ViewModel.CoinList;
        base.OnParametersSet();
    }

    private async Task CloseModal()
    {
        bool visible = false;
        await VisibleChanged.InvokeAsync(visible);
    }
}
