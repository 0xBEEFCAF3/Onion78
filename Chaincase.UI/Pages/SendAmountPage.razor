@page "/send/amount"
@using Chaincase.UI.Services
@inject SendViewModel SendViewModel
@inject StackService StackService
@inject UIStateService UiStateService
@inject NavigationManager NavigationManager
@inherits ReactiveComponentBase<SendViewModel>

<ion-content class="ion-padding">

    <IonItem>
        <ion-label>Amount</ion-label>
        <IonInput @bind-Value="@ViewModel.AmountText" type="number"/>
    </IonItem>
    @* This belongs iniline with the BTC amount in Dollars
            <IonItem>
            @ViewModel.AmountDollars
        </IonItem>*@
    <p>Chosen coins balance</p>
    <p>â‚¿@ViewModel.SelectCoinsViewModel.SelectedAmount</p>

    @*<ion-label>Set Max</ion-label> TODO should be a BUTTON that just sets amount & coin selection*@
    <IonToggle class="ion-float-right" name="grape" color="tertiary" Value="true"/>
    <br />
    <ion-label class="ion-text-center">Choose coins</ion-label>
    <IonButton OnClick="NavigateToSelectCoinsPage" expand="block">
        Automatic coin selection <ion-icon name="chevron-forward-outline"/>
    </IonButton>

    <p>Fee: <ion-badge @onclick="ToggleSelectFeeModal">~@ViewModel.FeeRate</ion-badge></p>

    <IonButton OnClick="NavigateToSendApprovalPage" expand="block" disabled ="@(!ViewModel.IsTransactionOkToSign)">CONFIRM</IonButton>

</ion-content>

<FeeModal @bind-Visible="@IsFeeModalVisible"
            FeeViewModel="@FeeViewModel"/>

@code {

    private bool IsSelectCoinsModalVisible;
    private bool IsFeeModalVisible;

    private FeeViewModel FeeViewModel { get; set; }

    private double amount { get; set; }

    protected override void OnInitialized()
    {
        ViewModel = SendViewModel;
        FeeViewModel = new FeeViewModel(SendViewModel);
        UiStateService.Title = "SEND";
    }

    private void ToggleSelectFeeModal() =>
        IsFeeModalVisible = !IsFeeModalVisible;

    private void NavigateToSelectCoinsPage()
    {
        StackService.PushStackState(async () =>
        {
            await NavigationManager.NavigateBack(null, "/send/amount");
        });
        NavigationManager.NavigateTo("/send/selectcoins");
    }

    private void NavigateToSendApprovalPage()
    {
        StackService.PushStackState(async () => {
            await NavigationManager.NavigateBack(null, "/send/amount");
        });
        NavigationManager.NavigateTo("/send/approve");
    }
 }
