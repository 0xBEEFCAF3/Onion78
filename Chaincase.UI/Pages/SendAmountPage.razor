@page "/send/amount"
@using Chaincase.UI.Services
@inject SendViewModel SendViewModel
@inject StackService StackService
@inject UIStateService UiStateService
@inject NavigationManager NavigationManager
@inherits ReactiveComponentBase<SendViewModel>

<ion-content>

    <IonItem>
        <ion-label>Amount</ion-label>
        <IonInput @bind-Value="ViewModel.AmountText" min="0"/>
    </IonItem>
    @* This belongs iniline with the BTC amount in Dollars
            <IonItem>
            @ViewModel.AmountDollars
        </IonItem>*@
    <ion-grid class="ion-no-padding">
        <ion-row>
            <ion-col>
                <IonItem lines="none">
                    <ion-label color="" position="stacked">Amount Selected</ion-label>
                    <h6>â‚¿@ViewModel.SelectCoinsViewModel.SelectedAmount</h6>
                </IonItem>
            </ion-col>
            <ion-col>
                <IonItem lines="none">
                    <ion-label position="stacked">Send Max</ion-label>
                    <IonToggle color="secondary" @bind-Value="ViewModel.IsMax"/>
                </IonItem>
            </ion-col>
        </ion-row>
    </ion-grid>

    <div class="ion-padding">
        <ion-label class="ion-text-center">Choose coins</ion-label>
        <IonButton OnClick="NavigateToSelectCoinsPage" expand="block">
            Automatic coin selection <ion-icon name="chevron-forward-outline" />
        </IonButton>

        <p>Fee: <ion-badge @onclick="ToggleSelectFeeModal">~@ViewModel.FeeRate</ion-badge></p>

        <IonButton OnClick="NavigateToSendApprovalPage" expand="block" disabled="@(!ViewModel.IsTransactionOkToSign)">CONFIRM</IonButton>
    </div>
</ion-content>

<FeeModal @bind-Visible="@IsFeeModalVisible"
            FeeViewModel="@FeeViewModel"/>

@code {

    private bool IsSelectCoinsModalVisible;
    private bool IsFeeModalVisible;

    private FeeViewModel FeeViewModel { get; set; }

    private double amount { get; set; }

    protected override void OnInitialized()
    {
        ViewModel = SendViewModel;
        FeeViewModel = new FeeViewModel(SendViewModel);
        UiStateService.Title = "SEND";
    }

    private void ToggleSelectFeeModal() =>
        IsFeeModalVisible = !IsFeeModalVisible;

    private void NavigateToSelectCoinsPage()
    {
        StackService.PushStackState(async () =>
        {
            await NavigationManager.NavigateBack(null, "/send/amount");
        });
        NavigationManager.NavigateTo("selectcoins");
    }

    private void NavigateToSendApprovalPage()
    {
        StackService.PushStackState(async () => {
            await NavigationManager.NavigateBack(null, "/send/amount");
        });
        NavigationManager.NavigateTo("/send/approve");
    }
 }
