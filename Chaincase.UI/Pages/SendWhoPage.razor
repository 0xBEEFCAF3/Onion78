@page "/send/who"
@using NBitcoin
@using NBitcoin.Payment
@using Microsoft.AspNetCore.Components
@using Chaincase.Common
@using Chaincase.UI.Services
@inject Global Global
@inject SendViewModel SendViewModel
@inject UIStateService UiStateService
@inject NavigationManager NavigationManager
@inject StackService StackService
@inject IJSRuntime JsRuntime

@inherits ReactiveComponentBase<SendViewModel>

<IonContent class="ion-padding">
    <h1>Sending to who?</h1>

    <IonItem>
        <IonLabel position="stacked">Address or <code>bitcoin:</code> uri</IonLabel>
        <IonInput @bind-Value="ViewModel.DestinationString" placeholder="Enter address..." />
        <IonButton slot="end" OnClick="OnClickScan">
            <IonIcon name="scan-outline"></IonIcon>
        </IonButton>
    </IonItem>
    <IonButton OnClick="OnContinue" expand="block" disabled="@(!IsAddressValid)">NEXT</IonButton>

</IonContent>

@code {

    private string Label { get; set; }

    private string _addressString;

    private bool IsAddressValid => ViewModel.Address is not null;

    protected override void OnInitialized()
    {
        ViewModel = SendViewModel;
        UiStateService.Title = "SEND";
    }

    private async Task OnClickScan()
    {
        var scanner = new ZXing.Mobile.MobileBarcodeScanner();
        var result = await scanner.Scan();

        if (result != null)
        { ViewModel.HandleScan(result.Text); }
    }

    public void OnContinue()
    {
        StackService.PushStackState(async () =>
        {
            await NavigationManager.NavigateBack(JsRuntime, "/send/who");
        });
        NavigationManager.NavigateTo("/send/label");
    }

}
